ДЗ для Макса
1. Создать переменные типа строка,листа,множенства,словаря,кортежа и обогатить их произвольными данными.

2. Доказать при помощи кода, какие переменные из первой задачи являются immutable,а какие mutable при помощи функции id

3. Реализовать алгоритм пузырьковой сортировки. Я это не объяснял, но задача преследует следующие цели :
    1. Гугление. Самостоятельный поиск объяснения логики алгоритма, т.е  не готовую реализацию в виде кода !!!
    3. Переформатирования мозга. При встрече, мне нужно объяснить код алгоритма, то как ты его понимаешь.
    3. Циклы и условные конструкции. Решаем вопрос с пониманием циклов и условиях.

4. Алгоритм пузырьковой сортировки упаковать в функцию bubble_def, которая обернута в декоратор decor_def,
    который считает время выполнения bubble_def и выводит информацию в файл start_end.txt.
    bubble_def принимает на вход произвольный список чисел (int) и возращает отсортированый список.
            
            
            #1. Создать переменные типа строка,листа,множенства,словаря,кортежа и обогатить их произвольными данными.
t_str='a,b,c'
print(type(t_str))
t_list=['a',8,9.0]
print(type(t_list))
t_set={'a',8,9.0}
print(type(t_set))
t_dict={1:'a',2:3,3:8.0}
print(type(t_dict))
t_tuple=(9,'a','b','c',4,7.0)
print(type(t_tuple))

#2. Доказать при помощи кода, какие переменные из первой задачи являются immutable,а какие mutable при помощи функции id

t_str='a,b,c'
print('t_str id',id(t_str))
t_str='a,b,c'+'f'
print('t_str id',id(t_str),'\n')

t_list=['a',8,9.0]
print('t_list id',id(t_list))
t_list.append(8.0)
print('t_list id',id(t_list),'\n')

t_set={'a',8,9.0}
print('t_set id',id(t_set))
t_set.add(9.0)
print('t_set id',id(t_set),'\n')

t_dict={1:'a',2:3,3:8.0}
print('t_dict id',id(t_dict))
t_dict['f']='b'
print('t_dict id',id(t_dict),'\n')

t_tuple=(9,'a','b','c',4,7.0)
print('t_tuple id',id(t_tuple))
t_tuple=('a','b','c')
print('t_tuple id',id(t_tuple),'\n')





3. Реализовать алгоритм пузырьковой сортировки. Я это не объяснял, но задача преследует следующие цели :
    1. Гугление. Самостоятельный поиск объяснения логики алгоритма, т.е  не готовую реализацию в виде кода !!!
    
p_list=[8,3,7,6,5,4,9,2,1]   
for i in range (len(p_list)-1):
    for j in range(len(p_list)-1-i):
        if p_list[j]>p_list[j+1]:
            p_list[j],p_list[j+1]=p_list[j+1],p_list[j]           
        print(i,j,p_list)
                        
    2. Переформатирования мозга. При встрече, мне нужно объяснить код алгоритма, то как ты его понимаешь.
    3. Циклы и условные конструкции. Решаем вопрос с пониманием циклов и условиях.    

4. Алгоритм пузырьковой сортировки упаковать в функцию bubble_def, которая обернута в декоратор decor_def,
    который считает время выполнения bubble_def и выводит информацию в файл start_end.txt.
    bubble_def принимает на вход произвольный список чисел (int) и возращает отсортированый список.

import time
import sys
path_log = 'C:/Users/NorM/Desktop/dz/start_end.txt'

def decor_def(user_func):
    def wrapp(*args):
        first_time = time.time()
        sys.stdout = open(path_log, 'a')
        #print('запоминам текущее время в first_time', first_time)
        a = user_func(*args)
        print('start_end', time.time() - first_time)
        print(a)
        sys.stdout.close()
        return a
    return wrapp
    
    
@decor_def
def bubble_def(p_list):
    print(p_list)
    for i in range (len(p_list)-1):
        for j in range(len(p_list)-1-i):
            if p_list[j]>p_list[j+1]:
                p_list[j],p_list[j+1]=p_list[j+1],p_list[j]    
    return p_list

p_list=[8,3,7,6,5,4,9,2,1]
bubble_def(p_list)
